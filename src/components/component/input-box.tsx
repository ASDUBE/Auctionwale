/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/Gm6oicOF9if
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import { Input } from "@/components/ui/input"
import { Popover, PopoverTrigger, PopoverContent } from "@/components/ui/popover"
import { Calendar } from "@/components/ui/calendar"

export function InputBox() {
  return (
    <div className="grid grid-cols-1 sm:grid-cols-5 gap-4">
      <div className="relative">
        <Input
          type="text"
          placeholder="Enter city"
          className="flex items-center gap-2 px-4 py-2 bg-gray-200 rounded-md pl-10 pr-4 border border-muted focus:border-transparent focus:ring-primary w-full sm:w-auto"
        />
        <div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <MapPinIcon className="w-5 h-5 text-muted-foreground text-gray-500" />
        </div>
      </div>
      <div className="relative">
        <Input
          type="text"
          placeholder="Enter locality"
          className="flex items-center gap-2 px-4 py-2 rounded-md pl-10 pr-4 border border-muted focus:border-transparent focus:ring-primary w-full sm:w-auto"
        />
        <div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <LocateIcon className="w-5 h-5 text-muted-foreground " />
        </div>
      </div>
      <div className="relative">
        <Input
          type="text"
          placeholder="Property Type"
          className="flex items-center gap-2 px-4 py-2 rounded-md pl-10 pr-4 border border-muted focus:border-transparent focus:ring-primary w-full sm:w-auto"
        />
        <div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <LocateIcon className="w-5 h-5 text-muted-foreground" />
        </div>
      </div>
      <div className="relative">
        <Input
          type="text"
          placeholder="Property Budge"
          className="flex items-center gap-2 px-4 py-2 rounded-md pl-10 pr-4 border border-muted focus:border-transparent focus:ring-primary w-full sm:w-auto"
        />
        <div className="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <LocateIcon className="w-5 h-5 text-muted-foreground" />
        </div>
      </div>
      <div>
        <Popover>
          <PopoverTrigger asChild>
            <Input
              type="text"
              placeholder="Application date"
              className="flex items-center gap-2 px-4 py-2 rounded-md pr-4 pl-4 border border-muted focus:border-transparent focus:ring-primary cursor-pointer w-full sm:w-auto"
            />
          </PopoverTrigger>
          <PopoverContent className= " absolute left-0 z-10 mt-2 w-56 origin-top-left rounded-md bg-background p-2 shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none">
            <Calendar />
          </PopoverContent >
        </Popover>
      </div>
    </div>
  )
}

function LocateIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="2" x2="5" y1="12" y2="12" />
      <line x1="19" x2="22" y1="12" y2="12" />
      <line x1="12" x2="12" y1="2" y2="5" />
      <line x1="12" x2="12" y1="19" y2="22" />
      <circle cx="12" cy="12" r="7" />
    </svg>
  )
}


function MapPinIcon(props) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M20 10c0 6-8 12-8 12s-8-6-8-12a8 8 0 0 1 16 0Z" />
      <circle cx="12" cy="10" r="3" />
    </svg>
  )
}
